
package vista;
import controlador.Negocio;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Producto;
import modelo.Venta;

/*@author Nelson*/
public class MenuCompras extends javax.swing.JPanel {
    Negocio obj;
    public MenuCompras(Negocio principal) {
        initComponents();
        this.obj = principal;
        ListPro();
    }
    public void ListPro(){
        List<Producto> Listarproducto = obj.mostrarProductos();
        DefaultTableModel modelo = (DefaultTableModel) Tabpro.getModel();
        Object[] ob = new Object[6];
        modelo.setRowCount(0);
        for(int i = 0; i < Listarproducto.size(); i++){
            ob[0] = Listarproducto.get(i).getId();
            ob[1] = Listarproducto.get(i).getInfo();
            ob[2] = Listarproducto.get(i).getTipo();
            
            ob[3] = Listarproducto.get(i).getPrecio();
            ob[4] = Listarproducto.get(i).getCantidad();
            ob[5] = (Listarproducto.get(i).getCantidad()*Listarproducto.get(i).getPrecio());
            
            
            modelo.addRow(ob);
        }
        Tabpro.setModel(modelo);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        text = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabpro = new javax.swing.JTable();
        Ordenar = new javax.swing.JComboBox<>();
        fondo = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        text.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        text.setText("Registro de Compras");
        jPanel1.add(text, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 260, 50));

        Tabpro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo del producto", "Nombre del producto", "Tipo", "Costo del producto", "Cantidad comprada", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tabpro);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 760, 380));

        Ordenar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "Ordenar Menor a Mayor CP", "Ordenar CC" }));
        Ordenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrdenarActionPerformed(evt);
            }
        });
        jPanel1.add(Ordenar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, -1, -1));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/MenuBackground.png"))); // NOI18N
        jPanel1.add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    /*=========================================*/
    /*<<---- Ordenamientos(Avance2) Juan ---->>*/
    /*=========================================*/
    
    private void OrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrdenarActionPerformed
        String Value=Ordenar.getSelectedItem().toString();
        int valueint=Ordenar.getSelectedIndex();
        System.out.println(Value+" - "+valueint);
        switch (Ordenar.getSelectedIndex()) {
            case 0: Default(); break;
            case 1: ordenardemenoramayorCP(); break;
            case 2: ordenarCC(); break;
            default:
            throw new AssertionError();
        }
    }//GEN-LAST:event_OrdenarActionPerformed

    void Default(){
        List<Producto> Listarproducto = obj.mostrarProductos();
        DefaultTableModel modelo = (DefaultTableModel) Tabpro.getModel();
        Object[] ob = new Object[6];
        modelo.setRowCount(0);
        for(int i = 0; i < Listarproducto.size(); i++){
            ob[0] = Listarproducto.get(i).getId();
            ob[1] = Listarproducto.get(i).getInfo();
            ob[2] = Listarproducto.get(i).getTipo();
            
            ob[3] = Listarproducto.get(i).getPrecio();
            ob[4] = Listarproducto.get(i).getCantidad();
            ob[5] = (Listarproducto.get(i).getCantidad()*Listarproducto.get(i).getPrecio());
            
            
            modelo.addRow(ob);
        }
        Tabpro.setModel(modelo);
    }
    
    void ordenardemenoramayorCP(){
        DefaultTableModel modelo= (DefaultTableModel) Tabpro.getModel();
        List<Producto> Listarproducto= obj.mostrarProductos();
        Object[] ob= new Object[6];
        modelo.setRowCount(0);
        for(int i = 0; i < Listarproducto.size(); i++){
            ob[0] = Listarproducto.get(i).getId();
            ob[1] = Listarproducto.get(i).getInfo();
            ob[2] = Listarproducto.get(i).getTipo();
            
            ob[3] = Listarproducto.get(i).getPrecio();
            ob[4] = Listarproducto.get(i).getCantidad();
            ob[5] = (Listarproducto.get(i).getCantidad()*Listarproducto.get(i).getPrecio());
            
            
            modelo.addRow(ob);
        }
        Tabpro.setModel(modelo);
        int columnToSort=3;
        for (int i = 0; i < modelo.getRowCount() - 1; i++) {
            int minPrecio = i;
            for (int j = i + 1; j < modelo.getRowCount() ; j++) {
                Comparable<Object> minValue = (Comparable<Object>) modelo.getValueAt(minPrecio, columnToSort);
                Comparable<Object> currentValue = (Comparable<Object>) modelo.getValueAt(j, columnToSort);
                if (currentValue.compareTo(minValue) < 0) {
                    minPrecio = j;
                }
            }if (minPrecio != i) {
                for (int k = 0; k < modelo.getColumnCount(); k++) {
                    Object temp = modelo.getValueAt(i, k);
                    modelo.setValueAt(modelo.getValueAt(minPrecio, k), i, k);
                    modelo.setValueAt(temp, minPrecio, k);
                }                 
            }
        }
    }
    
    void ordenarCC(){
        DefaultTableModel modelo=(DefaultTableModel)Tabpro.getModel();
        List<Producto> Listarproducto= obj.mostrarProductos();
        Object[] ob= new Object[6];
        modelo.setRowCount(0);
        for(int i = 0; i < Listarproducto.size(); i++){
            ob[0] = Listarproducto.get(i).getId();
            ob[1] = Listarproducto.get(i).getInfo();
            ob[2] = Listarproducto.get(i).getTipo();
            
            ob[3] = Listarproducto.get(i).getPrecio();
            ob[4] = Listarproducto.get(i).getCantidad();
            ob[5] = (Listarproducto.get(i).getCantidad()*Listarproducto.get(i).getPrecio());
            
            
            modelo.addRow(ob);
        }
        Tabpro.setModel(modelo);
        int columnToSort=4;
        for (int i = 0; i < modelo.getRowCount()- 1; i++) {
                int minCantidad = i;
                for (int j = i + 1; j < modelo.getRowCount() ; j++) {
                    Comparable<Object> minValue = (Comparable<Object>) modelo.getValueAt(minCantidad, columnToSort);
                    Comparable<Object> currentValue = (Comparable<Object>) modelo.getValueAt(j, columnToSort);
                    if (currentValue.compareTo(minValue) < 0) {
                        minCantidad = j;
                    }
                }
                if (minCantidad != i) {
                    for (int k = 0; k < modelo.getColumnCount(); k++) {
                        Object temp = modelo.getValueAt(i, k);
                        modelo.setValueAt(modelo.getValueAt(minCantidad, k), i, k);
                        modelo.setValueAt(temp, minCantidad, k);
                    }
                }
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Ordenar;
    private javax.swing.JTable Tabpro;
    private javax.swing.JLabel fondo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel text;
    // End of variables declaration//GEN-END:variables
}
