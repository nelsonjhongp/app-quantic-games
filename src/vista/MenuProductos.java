package vista;

import javax.swing.table.DefaultTableModel;
import controller.Negocio;
import estructuradatos.arbolBinario.vistaArbol;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import model.Producto;
import vista.*;

/*@author Nelson*/
public class MenuProductos extends javax.swing.JPanel {
    private Negocio obj;
    
    public MenuProductos(Negocio principal) {
        initComponents();
        this.obj = principal;
        muestra();
    }
    
    void muestra(){
        DefaultTableModel dt=(DefaultTableModel)Tabla.getModel();
        dt.setRowCount(0);
        for (Producto pr:obj.mostrarProductos()) {
            Object v[]={pr.getId(),pr.getTipo(),pr.getInfo(),
                        pr.getPrecio(),pr.getCantidad()};
                        dt.addRow(v);
        }
        //Producto.setContar(0);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        cmbFiltroTipo = new javax.swing.JComboBox<>();
        btnBuscar = new javax.swing.JButton();
        lblFiltro = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblTipo = new javax.swing.JLabel();
        cmbTipo = new javax.swing.JComboBox<>();
        lblDescripcion = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        lblPrecio = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        lblStock = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        btnNuevoProd = new javax.swing.JButton();
        btnAnadir = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        cmbOrdenar = new javax.swing.JComboBox<>();
        txtBuscar = new javax.swing.JTextField();
        lblBuscar = new javax.swing.JLabel();
        btnMostrar1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        fondo = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Productos");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 120, 50));

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Tipo", "Descripcion", "Precio", "Cantida"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMouseClicked(evt);
            }
        });
        Tabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TablaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla);
        if (Tabla.getColumnModel().getColumnCount() > 0) {
            Tabla.getColumnModel().getColumn(1).setPreferredWidth(150);
            Tabla.getColumnModel().getColumn(2).setPreferredWidth(350);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 760, 410));

        cmbFiltroTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Juego", "Consola", "Mouse", "Teclado", "Audifono", "Mando", "Microfono", "Silla Gamer" }));
        cmbFiltroTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFiltroTipoActionPerformed(evt);
            }
        });
        add(cmbFiltroTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 50, 130, -1));

        btnBuscar.setText("Buscar");
        btnBuscar.setEnabled(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, 80, -1));

        lblFiltro.setText("Filtrar x Tipo");
        add(lblFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, -1, 20));

        lblId.setText("Id");
        add(lblId, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 70, 20));

        txtId.setEnabled(false);
        add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 500, 140, -1));

        lblTipo.setText("Tipo");
        add(lblTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 70, 20));

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Juego", "Consola", "Mouse", "Teclado", "Audifono", "Mando", "Microfono", "Silla Gamer" }));
        cmbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoActionPerformed(evt);
            }
        });
        add(cmbTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 530, 140, -1));

        lblDescripcion.setText("Descripcion");
        add(lblDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 560, 70, 20));
        add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 560, 280, -1));

        lblPrecio.setText("Precio");
        add(lblPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 500, 50, 20));
        add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 500, 110, -1));

        lblStock.setText("Stock");
        add(lblStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 530, 50, 20));
        add(txtStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 530, 110, -1));

        btnActualizar.setText("Actualizar");
        btnActualizar.setEnabled(false);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 530, 130, -1));

        btnNuevoProd.setText("Nuevo Producto");
        btnNuevoProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoProdActionPerformed(evt);
            }
        });
        add(btnNuevoProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 500, 130, -1));

        btnAnadir.setText("AÃ±adir");
        btnAnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnadirActionPerformed(evt);
            }
        });
        add(btnAnadir, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 560, 180, -1));

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 560, 130, -1));

        cmbOrdenar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ordenar x Precio (Merge)", "Ordenar x Cantidad (Quick)" }));
        cmbOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrdenarActionPerformed(evt);
            }
        });
        add(cmbOrdenar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 200, -1));

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });
        add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 230, -1));

        lblBuscar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBuscar.setText("Buscar x Descripcion :");
        add(lblBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 24, 140, -1));

        btnMostrar1.setText("Mostrar Todo");
        btnMostrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrar1ActionPerformed(evt);
            }
        });
        add(btnMostrar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, 130, -1));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, 10, 50));

        jButton1.setText("Arbol");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 110, 20));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/MenuBackground.png"))); // NOI18N
        fondo.setText("jLabel2");
        fondo.setPreferredSize(new java.awt.Dimension(900, 600));
        add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));
    }// </editor-fold>//GEN-END:initComponents

    private void cmbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTipoActionPerformed

    private void btnNuevoProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoProdActionPerformed
        txtId.setText("Autogenerados");
        txtDescripcion.setText("");
        cmbTipo.setSelectedIndex(0);
        txtPrecio.setText("");
        txtStock.setText("");
        //requestFocus es para que el cursor vaya defrente al cliente!!
        cmbTipo.requestFocus();
        muestra();
        btnAnadir.setEnabled(true);
        btnEliminar.setEnabled(false);
        btnActualizar.setEnabled(false);
    }//GEN-LAST:event_btnNuevoProdActionPerformed

    private void cmbFiltroTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFiltroTipoActionPerformed
        String Value=cmbFiltroTipo.getSelectedItem().toString();
        muestraFiltro(Value);
        
        if (cmbFiltroTipo.getSelectedItem().equals("Microfono")) {
            ordenSeleccionDeMicrofonos();
        }
    }//GEN-LAST:event_cmbFiltroTipoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        busqueda(txtBuscar.toString());
    }//GEN-LAST:event_btnBuscarActionPerformed

    void busqueda(String queBuscar){
        DefaultTableModel modelo = (DefaultTableModel) Tabla.getModel();
        String valorBuscado = txtBuscar.getText();
        int filaEncontrada = -1;

        for (int i = 0; i < modelo.getRowCount(); i++) {
            String valorCelda = (String) modelo.getValueAt(i, 2);
            if (valorCelda.equals(valorBuscado)) {
                filaEncontrada = i;
                break; //Se detiene la busqueda al encontrar
            }
        }

        if (filaEncontrada != -1) {
            // Se resalta la fina encontrada
            Tabla.getSelectionModel().setSelectionInterval(filaEncontrada, filaEncontrada);
        }
    }
    
    int flechavar = 0;
    boolean mouseDentro = false;
    private void TablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMouseClicked
        int fila = Tabla.getSelectedRow() + flechavar;
        txtId.setText(Tabla.getValueAt(fila, 0).toString());
        cmbTipo.setSelectedIndex(numtipo(Tabla.getValueAt(fila, 1).toString()));
        txtDescripcion.setText(Tabla.getValueAt(fila, 2).toString());
        txtPrecio.setText(Tabla.getValueAt(fila, 3).toString());
        txtStock.setText(Tabla.getValueAt(fila, 4).toString());
        
        
        btnActualizar.setEnabled(true);
        btnEliminar.setEnabled(true);
        btnAnadir.setEnabled(false);
        mouseDentro = true;
        flechavar = 0;
    }//GEN-LAST:event_TablaMouseClicked

    
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if(JOptionPane.showConfirmDialog(null, "Seguro de Eliminar","Borrar",
                JOptionPane.YES_NO_OPTION)==0){
            obj.eliminarProducto(Integer.parseInt(txtId.getText()));
            muestra();
            txtDescripcion.setText("");
            txtPrecio.setText("");
            txtStock.setText("");
            btnEliminar.setEnabled(false);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        Producto pr = new Producto();
        pr.setId(Integer.parseInt(txtId.getText()));
        pr.setTipo(cmbTipo.getSelectedItem().toString());
        pr.setInfo(txtDescripcion.getText());
        pr.setPrecio(Double.parseDouble(txtPrecio.getText()));
        pr.setCantidad(Integer.parseInt(txtStock.getText()));
        obj.actualizarProducto(pr);
        muestra();
        btnActualizar.setEnabled(false);
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnAnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnadirActionPerformed
        String tipo = cmbTipo.getSelectedItem().toString();
        String info = txtDescripcion.getText();
        double precio = Double.parseDouble(txtPrecio.getText());
        int cantidad = Integer.parseInt(txtStock.getText());
        
        obj.anadirProducto(tipo, info, precio, cantidad);
        
        muestra();
        btnAnadir.setEnabled(false);
    }//GEN-LAST:event_btnAnadirActionPerformed

    private void btnMostrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrar1ActionPerformed
        muestra();
    }//GEN-LAST:event_btnMostrar1ActionPerformed

    private void cmbOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrdenarActionPerformed
        switch (cmbOrdenar.getSelectedIndex()) {
            case 0: ordenQuick(3); break;//Precio
            case 1: ordenMerge(4); break;//Cantidad
            default:
                throw new AssertionError();
        }
    }//GEN-LAST:event_cmbOrdenarActionPerformed

    private void TablaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER) {
            flechavar++;
            TablaMouseClicked(null);
            
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            flechavar--;
            TablaMouseClicked(null);
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_DELETE && mouseDentro){
            btnEliminarActionPerformed(null);
            mouseDentro = false;
        };
        
    }//GEN-LAST:event_TablaKeyPressed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        filtra(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        vistaArbol varb = new vistaArbol(obj.envioArbol());
        varb.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    public void filtra(String cad){
        DefaultTableModel modelo = (DefaultTableModel) Tabla.getModel();
        modelo.setRowCount(0);
        obj.mostrarProductos().stream()
                .filter(x->x.getInfo().toLowerCase().startsWith(cad.toLowerCase()))
                .forEach(x->modelo.addRow(new Object[]{x.getId(),x.getTipo(),x.getInfo(),x.getPrecio(),x.getCantidad()}));
    }
    
    void ordenMerge(int columna) {
        //USAMOS EL MERGE SORT EN ESTE ORDENAMIENTO        
        // Obtener el TableModel asociado al JTable
        TableModel model = Tabla.getModel();

        // Clase que implementa el Merge Sort
        class MergeSort {
            public void sort(TableModel model, int column, int start, int end) {
                if (start < end) {
                    int mid = (start + end) / 2;
                    sort(model, column, start, mid);
                    sort(model, column, mid + 1, end);
                    merge(model, column, start, mid, end);
                }
            }
            
            private void merge(TableModel model, int column, int start, int mid, int end) {
                int leftIndex = start;
                int rightIndex = mid + 1;
                int tempIndex = 0;

                Object[][] temp = new Object[end - start + 1][model.getColumnCount()];

                while (leftIndex <= mid && rightIndex <= end) {
                    Object leftValue = model.getValueAt(leftIndex, column);
                    Object rightValue = model.getValueAt(rightIndex, column);
                    if (leftValue instanceof Comparable && rightValue instanceof Comparable) {
                        if (((Comparable) leftValue).compareTo(rightValue) <= 0) {
                            copyRow(model, temp, tempIndex++, leftIndex++);
                        } else {
                            copyRow(model, temp, tempIndex++, rightIndex++);
                        }
                    }
                }

                while (leftIndex <= mid) {
                    copyRow(model, temp, tempIndex++, leftIndex++);
                }

                while (rightIndex <= end) {
                    copyRow(model, temp, tempIndex++, rightIndex++);
                }

                // Copiar los valores ordenados en el TableModel original
                for (int i = 0; i < temp.length; i++) {
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        model.setValueAt(temp[i][j], start + i, j);
                    }
                }
            }

            private void copyRow(TableModel model, Object[][] temp, int tempIndex, int rowIndex) {
                for (int i = 0; i < model.getColumnCount(); i++) {
                    temp[tempIndex][i] = model.getValueAt(rowIndex, i);
                }
            }
        }

        // Llamar al mÃ©todo de Merge Sort
        MergeSort mergeSort = new MergeSort();
        mergeSort.sort(model, columna, 0, model.getRowCount() - 1);

        // Actualizar el JTable con el TableModel ordenado
        Tabla.setModel(model);
    }
    
    void ordenQuick(int columna){
        // Obtener el TableModel asociado al JTable
        TableModel model = Tabla.getModel();
        // Clase que implementa el Quick Sort
        class QuickSort {
            public void sort(TableModel model, int column, int start, int end) {
                if (start < end) {
                    int partitionIndex = partition(model, column, start, end);
                    sort(model, column, start, partitionIndex-1);
                    sort(model, column, partitionIndex+1, end);
                }
            }
            private int partition(TableModel model, int column, int start, int end) {
                Object pivot = model.getValueAt(end, column);
                int i = start - 1;

                for (int j = start; j < end; j++) {
                    Object value = model.getValueAt(j, column);
                    if (value instanceof Comparable && pivot instanceof Comparable) {
                        if (((Comparable) value).compareTo(pivot) <= 0) {
                            i++;
                            swap(model, i, j);
                        }
                    }
                }
                swap(model, i+1, end);
                return i+1;
            }
            private void swap(TableModel model, int i, int j) {
                for (int k = 0; k < model.getColumnCount(); k++) {
                    Object temp = model.getValueAt(i, k);
                    model.setValueAt(model.getValueAt(j, k), i, k);
                    model.setValueAt(temp, j, k);
                }
            }
        }
        // Llamar al mÃ©todo de Quick Sort
        QuickSort quickSort = new QuickSort();
        quickSort.sort(model, columna, 0, model.getRowCount()-1);

        // Actualizar el JTable con el TableModel ordenado
        Tabla.setModel(model);
    }
    
    int numtipo(String nom){
        int num=0;
        switch (nom) {
            case "Juego": num=0; break;
            case "Consola": num=1; break;
            case "Mouse": num=2; break;
            case "Teclado": num=3; break;
            case "Audifono": num=4; break;
            case "Mando": num=5; break;
            case "Microfono": num=6; break;
            case "Silla Gamer": num=7; break;
            default:
                throw new AssertionError();
        }
        return num;
    }
    
    void muestraFiltro(String tipo){
        DefaultTableModel dt=(DefaultTableModel)Tabla.getModel();
        dt.setRowCount(0);
        for (Producto pr:obj.listarProductoFiltro(tipo)) {
            Object v[]={pr.getId(),pr.getTipo(),pr.getInfo(),
                        pr.getPrecio(),pr.getCantidad()};
                        dt.addRow(v);
        }
    }
    
    void ordenSeleccionDeMicrofonos(){
        //Ordenamiento de seleccion, hecho por Juan
        System.out.println("------------------------------------------------------");
        System.out.println("Ordenamiento (SELECCION) de precios de micrÃ³fonos : ");
        int precio[]={299, 560,749,469,244,684,449,449,519,519};

        for(int i=0 ; i< precio.length; i++){
        System.out.print(precio[i]+" --> ");
        }
        //Metodo de ordenamiento por metodo de selecciÃ³n 
        int k, min;

        for(int i=0; i<precio.length; i++){

            k=i;
            min=precio[i];
            for(int j=i+1;j<precio.length-1;j++){
                if(precio[j]<min){
                    k=j;
                    min=precio[j];

                }
            }
            precio[k]=precio[i];
            precio[i]=min;
        }

        System.out.print('\n');
        //imprimir datos ordenados
        for (int i = 0; i < precio.length; i++) {
            System.out.print(precio[i]+" --> ");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAnadir;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnMostrar1;
    private javax.swing.JButton btnNuevoProd;
    private javax.swing.JComboBox<String> cmbFiltroTipo;
    private javax.swing.JComboBox<String> cmbOrdenar;
    private javax.swing.JComboBox<String> cmbTipo;
    private javax.swing.JLabel fondo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblFiltro;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables
}
